diff --git a/node_modules/@bazel/typescript/internal/ts_project.bzl b/node_modules/@bazel/typescript/internal/ts_project.bzl
index ee340fe..34c325e 100755
--- a/node_modules/@bazel/typescript/internal/ts_project.bzl
+++ b/node_modules/@bazel/typescript/internal/ts_project.bzl
@@ -665,6 +665,8 @@ def ts_project_macro(
                 Label(typescript_package),
                 Label("//@bazel/typescript"),
                 tsconfig,
+                # allow to use --worker_sandboxing option
+                Label("//@bazel/typescript/internal/worker:filegroup"),
             ],
             entry_point = Label("//@bazel/typescript/internal/worker:index.js"),
             templated_args = [
diff --git a/node_modules/@bazel/typescript/internal/worker/index.js b/node_modules/@bazel/typescript/internal/worker/index.js
index 08bf866..5b9673e 100755
--- a/node_modules/@bazel/typescript/internal/worker/index.js
+++ b/node_modules/@bazel/typescript/internal/worker/index.js
@@ -26,7 +26,7 @@ const reportWatchStatusChanged = (diagnostic) => {
     worker.debug(ts.formatDiagnostic(diagnostic, formatHost));
 };
 function createWatchProgram(options, tsconfigPath, setTimeout) {
-    const host = createWatchCompilerHost(tsconfigPath, options, Object.assign(Object.assign({}, ts.sys), { setTimeout }), ts.createEmitAndSemanticDiagnosticsBuilderProgram, reportDiagnostic, reportWatchStatusChanged);
+    const host = createWatchCompilerHost(tsconfigPath, options, Object.assign(Object.assign({}, ts.sys), { setTimeout, /* override ts writing into stdout to allow use --define=VERBOSE_LOGS=1 in worker mode */ write: worker.debug }), ts.createEmitAndSemanticDiagnosticsBuilderProgram, reportDiagnostic, reportWatchStatusChanged);
     return ts.createWatchProgram(host);
 }
 let workerRequestTimestamp;
diff --git a/node_modules/@bazel/typescript/internal/worker/worker.js b/node_modules/@bazel/typescript/internal/worker/worker.js
index d6e188a..97d1da7 100755
--- a/node_modules/@bazel/typescript/internal/worker/worker.js
+++ b/node_modules/@bazel/typescript/internal/worker/worker.js
@@ -32,7 +32,8 @@ if (typeof global.gc !== 'function') {
  * Whether to print debug messages (to console.error) from the debug function
  * below.
  */
-exports.DEBUG = false;
+// expose debug logs only for builds with --define=VERBOSE_LOGS=1
+exports.DEBUG = process.env.VERBOSE_LOGS === '1';
 /** Maybe print a debug message (depending on a flag defaulting to false). */
 function debug(...args) {
     if (exports.DEBUG)
